/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    workshops: Workshop;
    faq: Faq;
    'contact-messages': ContactMessage;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    workshops: WorkshopsSelect<false> | WorkshopsSelect<true>;
    faq: FaqSelect<false> | FaqSelect<true>;
    'contact-messages': ContactMessagesSelect<false> | ContactMessagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    homepage: Homepage;
    discover: Discover;
    contact: Contact;
    process: Process;
  };
  globalsSelect: {
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    discover: DiscoverSelect<false> | DiscoverSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    process: ProcessSelect<false> | ProcessSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstname: string;
  lastname: string;
  avatar?: (number | null) | Media;
  fullName?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    avatar?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    avatar_large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    content?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  slug?: string | null;
  title: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workshops".
 */
export interface Workshop {
  id: number;
  slug?: string | null;
  title: string;
  description: string;
  type: 'in_person' | 'remote' | 'hybrid' | 'other';
  date: string;
  'meeting-location': string;
  capacity: number;
  'form-url': string;
  state: 'programmed' | 'confirmed' | 'canceled' | 'reported';
  categories?: (number | Category)[] | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq".
 */
export interface Faq {
  id: number;
  question: string;
  answer: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-messages".
 */
export interface ContactMessage {
  id: number;
  firstname: string;
  lastname: string;
  email: string;
  subject: string;
  message: string;
  status: 'processed' | 'pending' | 'needs_review' | 'spam' | 'archived';
  sentAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'workshops';
        value: number | Workshop;
      } | null)
    | ({
        relationTo: 'faq';
        value: number | Faq;
      } | null)
    | ({
        relationTo: 'contact-messages';
        value: number | ContactMessage;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstname?: T;
  lastname?: T;
  avatar?: T;
  fullName?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        avatar?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        avatar_large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        content?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "workshops_select".
 */
export interface WorkshopsSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  description?: T;
  type?: T;
  date?: T;
  'meeting-location'?: T;
  capacity?: T;
  'form-url'?: T;
  state?: T;
  categories?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq_select".
 */
export interface FaqSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-messages_select".
 */
export interface ContactMessagesSelect<T extends boolean = true> {
  firstname?: T;
  lastname?: T;
  email?: T;
  subject?: T;
  message?: T;
  status?: T;
  sentAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: number;
  banner?: (number | null) | Media;
  blocks?:
    | (
        | {
            background?: boolean | null;
            title: string;
            subtitle: string;
            description: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'introduction';
          }
        | {
            background?: boolean | null;
            title: string;
            subtitle: string;
            stapes?:
              | {
                  title: string;
                  description: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'process';
          }
        | {
            background?: boolean | null;
            title: string;
            description: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'introduction_workshop';
          }
        | {
            background?: boolean | null;
            title: string;
            description: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            'highlight-video': {
              title: string;
              miniature: number | Media;
              video: number | Media;
            };
            members?:
              | {
                  'profile-picture': number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'introduction_team';
          }
        | {
            background?: boolean | null;
            'profile-url': string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'instagram';
          }
      )[]
    | null;
  /**
   * Titre pour les moteurs de recherche (max. 60 caractères)
   */
  metaTitle?: string | null;
  /**
   * Description affichée dans les résultats de recherche (max. 160 caractères)
   */
  metaDescription?: string | null;
  /**
   * Image affichée lors du partage de la page sur les réseaux sociaux ou dans une messagerie
   */
  metaImage?: (number | null) | Media;
  /**
   * Empêche l'indexation de la page par les moteurs de recherche
   */
  noIndex?: boolean | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discover".
 */
export interface Discover {
  id: number;
  banner?: (number | null) | Media;
  title: string;
  introduction: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  blocks?:
    | (
        | {
            background?: boolean | null;
            title: string;
            subtitle: string;
            stapes?:
              | {
                  title: string;
                  description: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'process';
          }
        | {
            background?: boolean | null;
            richText: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'rich_text';
          }
        | {
            background?: boolean | null;
            title: string;
            subtitle: string;
            item?:
              | {
                  title: string;
                  description: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                }[]
              | null;
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'workshop_charter';
          }
        | {
            background?: boolean | null;
            title: string;
            description: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            videos?:
              | {
                  title: string;
                  miniature: number | Media;
                  video: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'feedback';
          }
        | {
            background?: boolean | null;
            title: string;
            product: {
              'product-picture'?: (number | null) | Media;
              comment: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              'comment-url'?: string | null;
              'shop-url': string;
            };
            author: {
              picture?: (number | null) | Media;
              author: string;
              description: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'book';
          }
        | {
            background?: boolean | null;
            title: string;
            subtitle: string;
            description: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'introduction_faq';
          }
      )[]
    | null;
  /**
   * Titre pour les moteurs de recherche (max. 60 caractères)
   */
  metaTitle?: string | null;
  /**
   * Description affichée dans les résultats de recherche (max. 160 caractères)
   */
  metaDescription?: string | null;
  /**
   * Image affichée lors du partage de la page sur les réseaux sociaux ou dans une messagerie
   */
  metaImage?: (number | null) | Media;
  /**
   * Empêche l'indexation de la page par les moteurs de recherche
   */
  noIndex?: boolean | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: number;
  banner?: (number | null) | Media;
  title: string;
  blocks?:
    | (
        | {
            background?: boolean | null;
            richText: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'rich_text';
          }
        | {
            background?: boolean | null;
            members?:
              | {
                  'profile-picture': number | Media;
                  title: string;
                  description: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'members';
          }
        | {
            background?: boolean | null;
            title: string;
            product: {
              'product-picture'?: (number | null) | Media;
              comment: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              'comment-url'?: string | null;
              'shop-url': string;
            };
            author: {
              picture?: (number | null) | Media;
              author: string;
              description: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'book';
          }
        | {
            background?: boolean | null;
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'faq';
          }
        | {
            background?: boolean | null;
            'profile-url': string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'instagram';
          }
        | {
            background?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contact_form';
          }
      )[]
    | null;
  /**
   * Titre pour les moteurs de recherche (max. 60 caractères)
   */
  metaTitle?: string | null;
  /**
   * Description affichée dans les résultats de recherche (max. 160 caractères)
   */
  metaDescription?: string | null;
  /**
   * Image affichée lors du partage de la page sur les réseaux sociaux ou dans une messagerie
   */
  metaImage?: (number | null) | Media;
  /**
   * Empêche l'indexation de la page par les moteurs de recherche
   */
  noIndex?: boolean | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "process".
 */
export interface Process {
  id: number;
  banner?: (number | null) | Media;
  title: string;
  introduction: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  blocks?:
    | (
        | {
            background?: boolean | null;
            title: string;
            subtitle: string;
            stapes?:
              | {
                  title: string;
                  description: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'process';
          }
        | {
            background?: boolean | null;
            richText: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'article_rich_text';
          }
        | {
            background?: boolean | null;
            content: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            'image-position': 'left' | 'right';
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'article_rich_text_picture';
          }
        | {
            background?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'article_next_workshops';
          }
        | {
            background?: boolean | null;
            title: string;
            subtitle: string;
            description: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'introduction_faq';
          }
        | {
            background?: boolean | null;
            title: string;
            product: {
              'product-picture'?: (number | null) | Media;
              comment: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              'comment-url'?: string | null;
              'shop-url': string;
            };
            author: {
              picture?: (number | null) | Media;
              author: string;
              description: string;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'book';
          }
        | {
            background?: boolean | null;
            'profile-url': string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'instagram';
          }
      )[]
    | null;
  /**
   * Titre pour les moteurs de recherche (max. 60 caractères)
   */
  metaTitle?: string | null;
  /**
   * Description affichée dans les résultats de recherche (max. 160 caractères)
   */
  metaDescription?: string | null;
  /**
   * Image affichée lors du partage de la page sur les réseaux sociaux ou dans une messagerie
   */
  metaImage?: (number | null) | Media;
  /**
   * Empêche l'indexation de la page par les moteurs de recherche
   */
  noIndex?: boolean | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  banner?: T;
  blocks?:
    | T
    | {
        introduction?:
          | T
          | {
              background?: T;
              title?: T;
              subtitle?: T;
              description?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        process?:
          | T
          | {
              background?: T;
              title?: T;
              subtitle?: T;
              stapes?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        introduction_workshop?:
          | T
          | {
              background?: T;
              title?: T;
              description?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        introduction_team?:
          | T
          | {
              background?: T;
              title?: T;
              description?: T;
              'highlight-video'?:
                | T
                | {
                    title?: T;
                    miniature?: T;
                    video?: T;
                  };
              members?:
                | T
                | {
                    'profile-picture'?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        instagram?:
          | T
          | {
              background?: T;
              'profile-url'?: T;
              id?: T;
              blockName?: T;
            };
      };
  metaTitle?: T;
  metaDescription?: T;
  metaImage?: T;
  noIndex?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discover_select".
 */
export interface DiscoverSelect<T extends boolean = true> {
  banner?: T;
  title?: T;
  introduction?: T;
  blocks?:
    | T
    | {
        process?:
          | T
          | {
              background?: T;
              title?: T;
              subtitle?: T;
              stapes?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        rich_text?:
          | T
          | {
              background?: T;
              richText?: T;
              id?: T;
              blockName?: T;
            };
        workshop_charter?:
          | T
          | {
              background?: T;
              title?: T;
              subtitle?: T;
              item?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              image?: T;
              id?: T;
              blockName?: T;
            };
        feedback?:
          | T
          | {
              background?: T;
              title?: T;
              description?: T;
              videos?:
                | T
                | {
                    title?: T;
                    miniature?: T;
                    video?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        book?:
          | T
          | {
              background?: T;
              title?: T;
              product?:
                | T
                | {
                    'product-picture'?: T;
                    comment?: T;
                    'comment-url'?: T;
                    'shop-url'?: T;
                  };
              author?:
                | T
                | {
                    picture?: T;
                    author?: T;
                    description?: T;
                  };
              id?: T;
              blockName?: T;
            };
        introduction_faq?:
          | T
          | {
              background?: T;
              title?: T;
              subtitle?: T;
              description?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
      };
  metaTitle?: T;
  metaDescription?: T;
  metaImage?: T;
  noIndex?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  banner?: T;
  title?: T;
  blocks?:
    | T
    | {
        rich_text?:
          | T
          | {
              background?: T;
              richText?: T;
              id?: T;
              blockName?: T;
            };
        members?:
          | T
          | {
              background?: T;
              members?:
                | T
                | {
                    'profile-picture'?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        book?:
          | T
          | {
              background?: T;
              title?: T;
              product?:
                | T
                | {
                    'product-picture'?: T;
                    comment?: T;
                    'comment-url'?: T;
                    'shop-url'?: T;
                  };
              author?:
                | T
                | {
                    picture?: T;
                    author?: T;
                    description?: T;
                  };
              id?: T;
              blockName?: T;
            };
        faq?:
          | T
          | {
              background?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        instagram?:
          | T
          | {
              background?: T;
              'profile-url'?: T;
              id?: T;
              blockName?: T;
            };
        contact_form?:
          | T
          | {
              background?: T;
              id?: T;
              blockName?: T;
            };
      };
  metaTitle?: T;
  metaDescription?: T;
  metaImage?: T;
  noIndex?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "process_select".
 */
export interface ProcessSelect<T extends boolean = true> {
  banner?: T;
  title?: T;
  introduction?: T;
  blocks?:
    | T
    | {
        process?:
          | T
          | {
              background?: T;
              title?: T;
              subtitle?: T;
              stapes?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        article_rich_text?:
          | T
          | {
              background?: T;
              richText?: T;
              id?: T;
              blockName?: T;
            };
        article_rich_text_picture?:
          | T
          | {
              background?: T;
              content?: T;
              'image-position'?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        article_next_workshops?:
          | T
          | {
              background?: T;
              id?: T;
              blockName?: T;
            };
        introduction_faq?:
          | T
          | {
              background?: T;
              title?: T;
              subtitle?: T;
              description?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        book?:
          | T
          | {
              background?: T;
              title?: T;
              product?:
                | T
                | {
                    'product-picture'?: T;
                    comment?: T;
                    'comment-url'?: T;
                    'shop-url'?: T;
                  };
              author?:
                | T
                | {
                    picture?: T;
                    author?: T;
                    description?: T;
                  };
              id?: T;
              blockName?: T;
            };
        instagram?:
          | T
          | {
              background?: T;
              'profile-url'?: T;
              id?: T;
              blockName?: T;
            };
      };
  metaTitle?: T;
  metaDescription?: T;
  metaImage?: T;
  noIndex?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}